{
  "ConnectionStrings": {
    "PriceBot": "Data Source=database/PriceBot.db",
    "RabbitMQ": "amqp://admin:adm123@rabbitmq_host:5672/PriceBot"
  },
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "ExchangeRateApi": {
    //"Url": "https://v6.exchangerate-api.com/v6/",
    //"EndPointLatest": "latest",
    "Url": "https://exchange-rates.abstractapi.com/v1/live/",
    "EndPointLatest": "api_key",
    "Key": "4023ec743761446887b6ed3652cfd00f"
  },
  "RabbitMQ": {
    "VirtualHost": "PriceBot",
    "HostName": "rabbitmq_host",
    "Port": "5672",
    "UserName": "admin",
    "Password": "adm123",
    "ProductsReprocessingQueue": "ProductsReprocessing"
  },
  "Serilog": {
    "MinimumLevel": {
      "Default": "Information",
      "Override": {
        "Microsoft": "Information",
        "System": "Information",
        "System.Net.Http.HttpClient": "Information",
        "AspNetCore.HealthChecks.UI": "Warning",
        "HealthChecks": "Warning"
      }
    },
    "Filter": [
      {
        "Name": "ByExcluding",
        "Args": {
          "expression": "RequestPath like '%swagger%'"
        }
      },
      {
        "Name": "ByExcluding",
        "Args": {
          "expression": "RequestPath like '%_framework%'"
        }
      },
      {
        "Name": "ByExcluding",
        "Args": {
          "expression": "RequestPath like '%_vs%'"
        }
      },
      {
        "Name": "ByExcluding",
        "Args": {
          "expression": "Scope[?] = 'HealthReportCollector is collecting health checks results.'"
        }
      },
      {
        "Name": "ByExcluding",
        "Args": {
          "expression": "EndsWith(RequestPath, '/health')"
        }
      }
    ],
    "Enrich": [ "FromLogContext", "WithMachineName", "WithCorrelationId", "WithCorrelationIdHeader" ],
    "WriteTo": [
      {
        "Name": "Console",
        "Args": {
          "outputTemplate": "[{Timestamp:HH:mm:ss} {Level:u3}] [{CorrelationId}] {Message:lj}{NewLine}"
        }
      },
      {
        "Name": "File",
        "Args": {
          "path": "Logs/log-.txt",
          "rollingInterval": "Day",
          "retainedFileCountLimit": 10,
          "outputTemplate": "[{Timestamp:HH:mm:ss} {Level:u3}] [{CorrelationId}] {Message:lj}{NewLine}{Exception}"
        }
      }
    ]
  },
  "HealthChecksUI": {
    "HealthChecks": [
      //{
      //  "Name": "Health Checks",
      //  "Uri": "/health"
      //}
    ],
    "EvaluationTimeInSeconds": 5,
    "MaximumHistoryEntriesPerEndpoint":  10
  }
}
